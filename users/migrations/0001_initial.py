# Generated by Django 4.2 on 2023-04-19 07:24

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "is_external",
                    models.BooleanField(
                        default=False,
                        help_text="Is the user external to DBCA?",
                        verbose_name="External to DBCA",
                    ),
                ),
                (
                    "agreed",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Has the user agreed to the Terms and Conditions?",
                        verbose_name="Agreed to the Terms and Conditions",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional academic title, shown in team lists only if             supplied, and only for external team members.",
                        max_length=30,
                        null=True,
                        verbose_name="Academic Title",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        help_text="First name or given name.",
                        max_length=100,
                        null=True,
                        verbose_name="First Name",
                    ),
                ),
                (
                    "middle_initials",
                    models.CharField(
                        blank=True,
                        help_text="Initials of first and middle names. Will be used in             team lists with abbreviated names.",
                        max_length=100,
                        null=True,
                        verbose_name="Initials",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        help_text="Last name or surname.",
                        max_length=100,
                        null=True,
                        verbose_name="Last Name",
                    ),
                ),
                (
                    "is_group",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this profile refers to a group, rather than a             natural person. Groups are referred to with their group             name,  whereas first and last name refer to the group's             contact person.",
                        verbose_name="Show as Group",
                    ),
                ),
                (
                    "group_name",
                    models.CharField(
                        blank=True,
                        help_text="Group name, if this profile is not a natural             person. E.g., 'Goldfields Regional Office'.",
                        max_length=200,
                        null=True,
                        verbose_name="Group Name",
                    ),
                ),
                (
                    "affiliation",
                    models.CharField(
                        blank=True,
                        help_text="Optional affiliation, not required for DBCA.             If provided, the affiliation will be appended to the             person or group name in parentheses.",
                        max_length=200,
                        null=True,
                        verbose_name="Affiliation",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
